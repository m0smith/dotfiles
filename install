#!/bin/bash -x

prepare_macos() {
    if ! xcode-select -p; then
        xcode-select --install  
    fi

    if [ ! -f "/usr/local/bin/brew" ]; then
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
  
    brew install ansible
    ansible-playbook -i inventory playbooks/playbook.yml --ask-become-pass
    
}

install_python_locally() {
    echo "Installing Python locally using pyenv..."

    # Install pyenv if not installed
    if ! command -v pyenv &> /dev/null
    then
        curl https://pyenv.run | bash

        # Add pyenv to path
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
    fi

    # Install the latest stable version of Python
    PYTHON_VERSION="3.11.5"
    pyenv install -s "$PYTHON_VERSION"
    pyenv global "$PYTHON_VERSION"

    

    echo "Python $PYTHON_VERSION installed successfully."
}

prepare_codespaces() {
    # Check if Python is installed
    if ! python3 -c "import shutil; print('shutil is available')" &> /dev/null
    then
        echo "Python3 is not installed."
        install_python_locally
    else
        echo "Python3 is already installed."
    fi

    if ! python3 -m pip --version
    then
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python3 get-pip.py --user
        export PATH="$HOME/.local/bin:$PATH"
    fi

    # Check if Ansible is installed
    if ! command -v ansible &> /dev/null
    then
        echo "Ansible is not installed. Installing Ansible..."
    
        # Install Ansible using pip
        pip install --user ansible
    
        # Add the local pip installation to the path
        command -v ansible || export PATH="$HOME/.local/bin:$PATH"
    
        echo "Ansible installed successfully."
    else
        echo "Ansible is already installed."
    fi

    ansible-playbook -v -i ./inventory/codespaces  playbooks/playbook.yml

}
if [ -n $CODESPACES ]; then
    prepare_codespaces
else
    prepare_macos
fi


